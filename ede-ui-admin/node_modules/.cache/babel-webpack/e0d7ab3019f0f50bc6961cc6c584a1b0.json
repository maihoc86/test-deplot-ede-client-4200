{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/vinh/Documents/DuAnTotNghiep/ede/ede-ui-admin/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ManageAccountsService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    this.REST_API_SERVER = 'http://localhost:8080/ede-customer';\n  }\n\n  addNewUser(data) {\n    return this.httpClient.post(this.REST_API_SERVER + '/admin/add-new-user', data, this.httpOptions);\n  }\n\n  sendEmail(email) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return _this.httpClient.post(_this.REST_API_SERVER + '/send-email-verify', {\n        email: email\n      }).toPromise();\n    })();\n  }\n\n  loadUser() {\n    return this.httpClient.get(this.REST_API_SERVER + '/users', this.httpOptions);\n  }\n\n  deleteUser(username) {\n    return this.httpClient.post(this.REST_API_SERVER + '/delete/users/' + username, this.httpOptions);\n  }\n\n  updateUser(user) {\n    return this.httpClient.post(`${this.REST_API_SERVER}/admin/update-customer`, user, this.httpOptions);\n  }\n\n}\n\nManageAccountsService.ɵfac = function ManageAccountsService_Factory(t) {\n  return new (t || ManageAccountsService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nManageAccountsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ManageAccountsService,\n  factory: ManageAccountsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\Users\\vinh\\Documents\\DuAnTotNghiep\\ede\\ede-ui-admin\\src\\app\\Services\\manage-accounts\\manage-accounts.service.ts"],"names":[],"mappings":";AACA,SACE,WADF,QAIO,sBAJP;;;AAUA,OAAM,MAAO,qBAAP,CAA4B;AAQhC,EAAA,WAAA,CAAoB,UAApB,EAA0C;AAAtB,SAAA,UAAA,GAAA,UAAA;AAPZ,SAAA,WAAA,GAAc;AACpB,MAAA,OAAO,EAAE,IAAI,WAAJ,CAAgB;AACvB,wBAAgB;AADO,OAAhB;AADW,KAAd;AAMA,SAAA,eAAA,GAAkB,oCAAlB;AACuC;;AACxC,EAAA,UAAU,CAAC,IAAD,EAAW;AAC1B,WAAO,KAAK,UAAL,CAAgB,IAAhB,CAA0B,KAAK,eAAL,GAAuB,qBAAjD,EAAwE,IAAxE,EAA8E,KAAK,WAAnF,CAAP;AACD;;AAEK,EAAA,SAAS,CAAC,KAAD,EAAc;AAAA;;AAAA;AAC3B,aAAO,KAAI,CAAC,UAAL,CAAgB,IAAhB,CAA0B,KAAI,CAAC,eAAL,GAAuB,oBAAjD,EAAuE;AAAE,QAAA,KAAK,EAAE;AAAT,OAAvE,EAAyF,SAAzF,EAAP;AAD2B;AAE5B;;AAIM,EAAA,QAAQ,GAAA;AACb,WAAO,KAAK,UAAL,CAAgB,GAAhB,CAAyB,KAAK,eAAL,GAAuB,QAAhD,EAA0D,KAAK,WAA/D,CAAP;AACD;;AAEM,EAAA,UAAU,CAAC,QAAD,EAAgB;AAC/B,WAAO,KAAK,UAAL,CAAgB,IAAhB,CAA0B,KAAK,eAAL,GAAuB,gBAAvB,GAAwC,QAAlE,EAA4E,KAAK,WAAjF,CAAP;AACD;;AAEM,EAAA,UAAU,CAAC,IAAD,EAAW;AAC1B,WAAO,KAAK,UAAL,CAAgB,IAAhB,CAA0B,GAAG,KAAK,eAAe,wBAAjD,EAA2E,IAA3E,EAAiF,KAAK,WAAtF,CAAP;AACD;;AA7B+B;;;mBAArB,qB,EAAqB,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;SAArB,qB;AAAqB,EAAA,OAAA,EAArB,qBAAqB,CAAA,I;AAAA,EAAA,UAAA,EAFpB","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpHeaders,\r\n  HttpClient,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\nimport { User } from 'src/app/models/user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ManageAccountsService {\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n    }),\r\n  };\r\n\r\n  private REST_API_SERVER = 'http://localhost:8080/ede-customer';\r\n  constructor(private httpClient: HttpClient) { }\r\n  public addNewUser(data: User) {\r\n    return this.httpClient.post<any>(this.REST_API_SERVER + '/admin/add-new-user', data, this.httpOptions);\r\n  }\r\n\r\n  async sendEmail(email: string) {\r\n    return this.httpClient.post<any>(this.REST_API_SERVER + '/send-email-verify', { email: email }).toPromise()\r\n  }\r\n\r\n\r\n\r\n  public loadUser() {\r\n    return this.httpClient.get<any>(this.REST_API_SERVER + '/users', this.httpOptions);\r\n  }\r\n\r\n  public deleteUser(username:string) {\r\n    return this.httpClient.post<any>(this.REST_API_SERVER + '/delete/users/'+username, this.httpOptions);\r\n  }\r\n\r\n  public updateUser(user: User) {\r\n    return this.httpClient.post<any>(`${this.REST_API_SERVER}/admin/update-customer`, user, this.httpOptions);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}